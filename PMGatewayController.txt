using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using PMGateway.Models;
using RestSharp;

namespace PMGateway.Controllers
{
    public class PMGatewayController : ApiController
    {
        public PMGatewayController()
        {

        }
        public AccessToken PMAccessToken()
        {
            AccessToken aToken = null;
            RestClient client = new RestClient(PMServerParams.IPAddress);
            var request = new RestRequest(PMServerParams.workspace + "/oauth2/token", Method.POST) { RequestFormat = DataFormat.Json };
            var accessToken = new AccessTokenParams();
            
            request.AddJsonBody(accessToken);
            var response = client.Execute<AccessToken>(request);
            Console.WriteLine("Status of request: " + response.StatusDescription);
            /*if(response.Data == null)
            {
                return NotFound();
            }*/
            aToken = response.Data;
            //return Ok(response.Data);

            return aToken;

        }

        public IHttpActionResult GetUsers()
        {
            AccessToken aToken = this.PMAccessToken();
            if(aToken == null || aToken.access_token == null)
            {
                return NotFound();
            }
            RestClient client = new RestClient(PMServerParams.IPAddress);
            var request = new RestRequest("api/1.0/" + PMServerParams.workspace + "/users", Method.GET) { RequestFormat = DataFormat.Json };
            request.AddHeader("Authorization", "Bearer " + aToken.access_token);
            var response = client.Execute<List<Object>>(request);
            if(response.Data == null)
            {
                return NotFound();
            }
            return Ok(response.Data);
        }

        [HttpPost]
        [Route("api/pmgateway/createcase")]
        public IHttpActionResult Post(PMRequestParam requestParam)

        {
            var accessToken = new AccessTokenParams();
            AccessToken aToken = this.PMAccessToken();
            if (aToken == null || aToken.error != null)
            {
                return Unauthorized();
            }
            else
            {
                RestClient client = new RestClient(PMServerParams.IPAddress);
                var request = new RestRequest("api/1.0/" + PMServerParams.workspace + "/cases/impersonate" , Method.POST) { RequestFormat = DataFormat.Json };
                string variables = "";
                foreach (CaseVariable caseV in requestParam.caseVariables.caseVariable)
                {
                    variables = variables + "\"" + caseV.VariableName + "\":\"" + caseV.VariableValue + "\"" + ",";
                }
                
                variables = variables.Remove(variables.LastIndexOf(","));
                string pData = "{\"pro_uid\":\"" + requestParam.pro_uid + "\",\"tas_uid\":\"" + requestParam.tas_uid + "\",\"usr_uid\":\"" + accessToken.usr_uid + "\",\"variables\":[{" + variables + "}]}";
                request.AddParameter("application/json", pData, ParameterType.RequestBody);
                //request.AddJsonBody(variables);
                request.AddHeader("Authorization", "Bearer " + aToken.access_token);
                var response = client.Execute<CreatePMCaseResponse>(request);
                CreatePMCaseResponse creatPMResponse = response.Data;
                string status = response.StatusCode.ToString();
                bool isOK = false;
                if (status == "OK")
                {
                    isOK = true;
                    //execute the triggers before form
                    var request1 = new RestRequest("api/1.0/" + PMServerParams.workspace + "/cases/" + creatPMResponse.app_uid + "/execute-trigger/1494149285a5617071dbff1011422036", Method.PUT) { RequestFormat = DataFormat.Json };
                    var request2 = new RestRequest("api/1.0/" + PMServerParams.workspace + "/cases/" + creatPMResponse.app_uid + "/execute-trigger/4769269335a5616f04b42e5082749352", Method.PUT) { RequestFormat = DataFormat.Json };
                    var request3 = new RestRequest("api/1.0/" + PMServerParams.workspace + "/cases/" + creatPMResponse.app_uid + "/execute-trigger/8673451495aaa72f868c085013823740", Method.PUT) { RequestFormat = DataFormat.Json };
                    request1.AddHeader("Authorization", "Bearer " + aToken.access_token);
                    request2.AddHeader("Authorization", "Bearer " + aToken.access_token);
                    request3.AddHeader("Authorization", "Bearer " + aToken.access_token);
                    client.Execute(request1);
                    client.Execute(request2);
                    client.Execute(request3);
                    //route the case to next user
                    request = new RestRequest("api/1.0/" + PMServerParams.workspace + "/cases/" + creatPMResponse.app_uid + "/route-case", Method.PUT) { RequestFormat = DataFormat.Json };
                    //request.Resource = "api/1.0/" + PMServerParams.workspace + "/cases/" + requestParam.app_uid + "/route-case";
                    request.AddHeader("Authorization", "Bearer " + aToken.access_token);
                    
                    //request.AddParameter("application/json", "", ParameterType.RequestBody);
                    var response1 = client.Execute(request);
                    status = "status 1: " + response1.StatusCode.ToString();
                    return Ok(creatPMResponse);

                }
                return Ok(status);
            }
        }

        [HttpPut]
        [Route("api/pmgateway/approve")]
        public IHttpActionResult Put(PMRequestParam requestParam)
        {
            AccessToken aToken = this.PMAccessToken();
            if (aToken == null || aToken.error != null)
            {
                return Unauthorized();
            }
            else
            {
                RestClient client = new RestClient(PMServerParams.IPAddress);
                var request = new RestRequest("api/1.0/" + PMServerParams.workspace + "/cases/" + requestParam.app_uid + "/variable", Method.PUT) { RequestFormat = DataFormat.Json };
                string variables = "";
                foreach (CaseVariable caseV in requestParam.caseVariables.caseVariable)
                {
                    variables = variables + "\"" + caseV.VariableName + "\":\"" + caseV.VariableValue + "\"" + ",";
                }
                variables = variables.Remove(variables.LastIndexOf(","));
                request.AddParameter("application/json", "{" + variables + "}", ParameterType.RequestBody);
                //request.AddJsonBody(variables);
                request.AddHeader("Authorization", "Bearer " + aToken.access_token);
                var response = client.Execute(request);

                string status = response.StatusCode.ToString();
                bool isOK = false;
                if (status == "OK")
                {
                    isOK = true;
                    request = new RestRequest("api/1.0/" + PMServerParams.workspace + "/cases/" + requestParam.app_uid + "/route-case", Method.PUT) { RequestFormat = DataFormat.Json };
                    //request.Resource = "api/1.0/" + PMServerParams.workspace + "/cases/" + requestParam.app_uid + "/route-case";
                    request.AddHeader("Authorization", "Bearer " + aToken.access_token);
                    //request.AddJsonBody(requestParam.del_index);
                    string variables1 = "\"del_index\":\"" + requestParam.del_index + "\"";
                    request.AddParameter("application/json", "{" + variables1 + "}", ParameterType.RequestBody);
                    var response1 = client.Execute(request);
                    status = "status 1: " + response1.StatusCode.ToString();
                    return Ok(response1);

                }
                return Ok(status);
            }
        }
    }
}
